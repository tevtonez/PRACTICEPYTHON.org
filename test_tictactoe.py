import tictactoe
import pytest

@pytest.mark.parametrize( "test_input, expected_output",
                         [
                             ( {1: ['| x ', '| o ', '|   ', '|'], 2: ['| x ', '| o ', '|   ', '|'], 3: ['| x ', '|   ', '|   ', '|'], 'sep1': ' --- --- ---', 'sep0': ' --- --- ---', 'sep2': ' --- --- ---'}, 1 ),
                             ( {1: ['| o ', '| x ', '|   ', '|'], 2: ['| o ', '| x ', '|   ', '|'], 3: ['|   ', '| x ', '|   ', '|'], 'sep1': ' --- --- ---', 'sep0': ' --- --- ---', 'sep2': ' --- --- ---'}, 1 ),
                             ( {1: ['|   ', '| o ', '| x ', '|'], 2: ['|   ', '| o ', '| x ', '|'], 3: ['|   ', '|   ', '| x ', '|'], 'sep1': ' --- --- ---', 'sep0': ' --- --- ---', 'sep2': ' --- --- ---'}, 1 ),
                             ( {'sep2': ' --- --- ---', 1: ['| x ', '| x ', '| x ', '|'], 2: ['| o ', '|   ', '|   ', '|'], 3: ['|   ', '| o ', '|   ', '|'], 'sep1': ' --- --- ---', 'sep0': ' --- --- ---'}, 1 ),
                             ( {'sep2': ' --- --- ---', 2: ['| x ', '| x ', '| x ', '|'], 1: ['| o ', '|   ', '|   ', '|'], 3: ['|   ', '| o ', '|   ', '|'], 'sep1': ' --- --- ---', 'sep0': ' --- --- ---'}, 1 ),
                             ( {'sep2': ' --- --- ---', 3: ['| x ', '| x ', '| x ', '|'], 1: ['| o ', '|   ', '|   ', '|'], 2: ['|   ', '| o ', '|   ', '|'], 'sep1': ' --- --- ---', 'sep0': ' --- --- ---'}, 1 ),
                             ( {'sep1': ' --- --- ---', 1: ['| x ', '| o ', '| o ', '|'], 2: ['|   ', '| x ', '|   ', '|'], 'sep0': ' --- --- ---', 3: ['|   ', '|   ', '| x ', '|'], 'sep2': ' --- --- ---'}, 1 ),
                             ( {1: ['| o ', '| o ', '| x ', '|'], 2: ['|   ', '| x ', '|   ', '|'], 3: ['| x ', '|   ', '|   ', '|'], 'sep0': ' --- --- ---', 'sep1': ' --- --- ---', 'sep2': ' --- --- ---'}, 1 )
                         ]
                         )
def test_check_winner( test_input, expected_output ):
    assert tictactoe.check_winner( test_input, colls = 3, rows = 3 ) == expected_output
